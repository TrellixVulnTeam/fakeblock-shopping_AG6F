{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      //creates new array and adds item, then sets array as new basket\n      const tmp = { ...state,\n        basket: [...state.basket, action.item]\n      };\n      return tmp;\n\n    case \"REMOVE_FROM_BASKET\":\n      //finds the first index of match\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        break;\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case \"SET_us\":\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n/*\nfor (let i=0; i < state.basket?.length;i++) {\n        if (action.item.id === state.basket[i].item.id) {\n          console.log('duplicates');\n        }\n      }\n\n\n      for (let i=0; i < arr.basket.length;i++) {\n            if (action.item.id ===  arr.basket[i].item.id) {\n              console.log('duplicates');\n            }\n          }\n                      console.log(arr.basket[arr.basket.length-1].id);\n\n\n\nlet add = true;\n      let tmp= {\n        ...state,\n        basket: [...state.basket]\n      };\n\n      if(state.basket?.length > 0){\n        for (let i=0; i < state.basket?.length;i++) {\n          if (action.item.id === state.basket[i].id) {\n            console.log(state.basket[i].quantity);\n            state.basket[i].quantity++;\n            return tmp;\n          }\n        }\n      }\n*/","map":{"version":3,"sources":["/home/pop_os_flex/Documents/Code/JavaScript/ReactJS/fakeblock-shopping/src/Components/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","tmp","index","findIndex","basketItem","id","newBasket","splice"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,IAAI,EAAC;AAFqB,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE;AACA,YAAMC,GAAG,GAAG,EACV,GAAGH,KADO;AAEVR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFE,OAAZ;AAIA,aAAOM,GAAP;;AAEF,SAAK,oBAAL;AACE;AACA,YAAMC,KAAK,GAAGJ,KAAK,CAACR,MAAN,CAAaa,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACM,EAD7B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGR,KAAK,CAACR,MAAV,CAAhB;;AACA,UAAIY,KAAK,IAAI,CAAb,EAAgB;AACdI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACD,OAFD,MAEO;AACL;AACD;;AACD,aAAO,EACL,GAAGJ,KADE;AAELR,QAAAA,MAAM,EAAEgB;AAFH,OAAP;;AAIA,SAAK,QAAL;AAEF;AACE,aAAOR,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeD,OAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const initialState = {\n  basket: [],\n  user:null\n};\nexport const getBasketTotal = (basket) =>\n  basket?.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      //creates new array and adds item, then sets array as new basket\n      const tmp = {\n        ...state,\n        basket: [...state.basket, action.item],\n      };\n      return tmp;\n\n    case \"REMOVE_FROM_BASKET\":\n      //finds the first index of match\n      const index = state.basket.findIndex(\n        (basketItem) => basketItem.id === action.id\n      );\n      let newBasket = [...state.basket];\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        break;\n      }\n      return {\n        ...state,\n        basket: newBasket,\n      };\n      case \"SET_us\":\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n/*\nfor (let i=0; i < state.basket?.length;i++) {\n        if (action.item.id === state.basket[i].item.id) {\n          console.log('duplicates');\n        }\n      }\n\n\n      for (let i=0; i < arr.basket.length;i++) {\n            if (action.item.id ===  arr.basket[i].item.id) {\n              console.log('duplicates');\n            }\n          }\n                      console.log(arr.basket[arr.basket.length-1].id);\n\n\n\nlet add = true;\n      let tmp= {\n        ...state,\n        basket: [...state.basket]\n      };\n\n      if(state.basket?.length > 0){\n        for (let i=0; i < state.basket?.length;i++) {\n          if (action.item.id === state.basket[i].id) {\n            console.log(state.basket[i].quantity);\n            state.basket[i].quantity++;\n            return tmp;\n          }\n        }\n      }\n*/\n"]},"metadata":{},"sourceType":"module"}