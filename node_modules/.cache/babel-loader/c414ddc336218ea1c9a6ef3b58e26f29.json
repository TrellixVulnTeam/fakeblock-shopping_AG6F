{"ast":null,"code":"export const initialState = {\n  basket: []\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      let addCond = true;\n\n      if (state.basket.length != 0) {\n        for (let i = 0; i < arr.basket.length; i++) {\n          if (action.item.id === state.basket[i].id) {\n            state.basket[i].quantity += 1;\n            addCond = false;\n          }\n        }\n      }\n\n      tmp = { ...state,\n        basket: [...state.basket, action.item]\n      };\n      return tmp;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n/*\nfor (let i=0; i < state.basket?.length;i++) {\n        if (action.item.id === state.basket[i].item.id) {\n          console.log('duplicates');\n        }\n      }\n\n\n      for (let i=0; i < arr.basket.length;i++) {\n            if (action.item.id ===  arr.basket[i].item.id) {\n              console.log('duplicates');\n            }\n          }\n                      console.log(arr.basket[arr.basket.length-1].id);\n*/","map":{"version":3,"sources":["/home/pop_os_flex/Documents/Code/JavaScript/ReactJS/fakeblock-shopping/src/Components/reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","addCond","length","i","arr","id","quantity","tmp"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE;AADkB,CAArB;AAGP,OAAO,MAAMC,cAAc,GAAID,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEE,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACM,UAAIC,OAAO,GAAC,IAAZ;;AACA,UAAGH,KAAK,CAACP,MAAN,CAAaW,MAAb,IAAuB,CAA1B,EAA4B;AAC1B,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGC,GAAG,CAACb,MAAJ,CAAWW,MAA7B,EAAoCC,CAAC,EAArC,EAAyC;AACvC,cAAIJ,MAAM,CAACJ,IAAP,CAAYU,EAAZ,KAAoBP,KAAK,CAACP,MAAN,CAAaY,CAAb,EAAgBE,EAAxC,EAA4C;AAC1CP,YAAAA,KAAK,CAACP,MAAN,CAAaY,CAAb,EAAgBG,QAAhB,IAA0B,CAA1B;AACAL,YAAAA,OAAO,GAAC,KAAR;AACD;AACF;AACF;;AAGFM,MAAAA,GAAG,GAAE,EACF,GAAGT,KADD;AAEFP,QAAAA,MAAM,EAAE,CAAC,GAAGO,KAAK,CAACP,MAAV,EAAkBQ,MAAM,CAACJ,IAAzB;AAFN,OAAL;AAKH,aAAOY,GAAP;;AACF;AACE,aAAOT,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,OAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const initialState = {\n  basket: [],\n};\nexport const getBasketTotal = (basket) =>\n  basket?.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n          let addCond=true;\n          if(state.basket.length != 0){\n            for (let i=0; i < arr.basket.length;i++) {\n              if (action.item.id ===  state.basket[i].id) {\n                state.basket[i].quantity+=1;\n                addCond=false;\n              }\n            }\n          }\n\n        \n         tmp ={\n            ...state,\n            basket: [...state.basket, action.item]\n          };\n          \n      return tmp;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\n/*\nfor (let i=0; i < state.basket?.length;i++) {\n        if (action.item.id === state.basket[i].item.id) {\n          console.log('duplicates');\n        }\n      }\n\n\n      for (let i=0; i < arr.basket.length;i++) {\n            if (action.item.id ===  arr.basket[i].item.id) {\n              console.log('duplicates');\n            }\n          }\n                      console.log(arr.basket[arr.basket.length-1].id);\n*/"]},"metadata":{},"sourceType":"module"}