{"ast":null,"code":"export const initialState = {\n  basket: []\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action, basket) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      for (let i = 0; i < ((_statebasket = statebasket) === null || _statebasket === void 0 ? void 0 : _statebasket.length); i++) {\n        var _statebasket;\n\n        if (action.item.id === basket[i].item.id) {\n          console.log('duplicates');\n        }\n      }\n\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/pop_os_flex/Documents/Code/JavaScript/ReactJS/fakeblock-shopping/src/Components/reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","i","statebasket","length","id"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE;AADkB,CAArB;AAGP,OAAO,MAAMC,cAAc,GAAID,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEE,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAeR,MAAf,KAA0B;AACxCS,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,eAAL;AACE,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,oBAAGC,WAAH,iDAAG,aAAaC,MAAhB,CAAf,EAAsCF,CAAC,EAAvC,EAA2C;AAAA;;AACzC,YAAIJ,MAAM,CAACJ,IAAP,CAAYW,EAAZ,KAAmBf,MAAM,CAACY,CAAD,CAAN,CAAUR,IAAV,CAAeW,EAAtC,EAA0C;AACxCN,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF;;AACD,aAAO,EACL,GAAGH,KADE;AAELP,QAAAA,MAAM,EAAE,CAAC,GAAGO,KAAK,CAACP,MAAV,EAAkBQ,MAAM,CAACJ,IAAzB;AAFH,OAAP;;AAIF;AACE,aAAOG,KAAP;AAZJ;AAcD,CAhBD;;AAkBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  basket: [],\n};\nexport const getBasketTotal = (basket) =>\n  basket?.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action,basket) => {\n  console.log(action);\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      for (let i=0; i < statebasket?.length;i++) {\n        if (action.item.id === basket[i].item.id) {\n          console.log('duplicates');\n        }\n      }\n      return {\n        ...state,\n        basket: [...state.basket, action.item],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}